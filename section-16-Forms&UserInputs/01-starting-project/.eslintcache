[{"/home/jan/Documents/reactjs-course/section-16-Forms&UserInputs/01-starting-project/src/index.js":"1","/home/jan/Documents/reactjs-course/section-16-Forms&UserInputs/01-starting-project/src/App.js":"2","/home/jan/Documents/reactjs-course/section-16-Forms&UserInputs/01-starting-project/src/components/SimpleInput.js":"3","/home/jan/Documents/reactjs-course/section-16-Forms&UserInputs/01-starting-project/src/hooks/use-input.js":"4","/home/jan/Documents/reactjs-course/section-16-Forms&UserInputs/01-starting-project/src/components/BasicForm.js":"5"},{"size":142,"mtime":1616595887000,"results":"6","hashOfConfig":"7"},{"size":244,"mtime":1647868254002,"results":"8","hashOfConfig":"7"},{"size":2743,"mtime":1647867380833,"results":"9","hashOfConfig":"7"},{"size":671,"mtime":1647866648912,"results":"10","hashOfConfig":"7"},{"size":1034,"mtime":1647868233106,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1oke72x",{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"19"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"22","messages":"23","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"19"},"/home/jan/Documents/reactjs-course/section-16-Forms&UserInputs/01-starting-project/src/index.js",[],"/home/jan/Documents/reactjs-course/section-16-Forms&UserInputs/01-starting-project/src/App.js",["25"],"/home/jan/Documents/reactjs-course/section-16-Forms&UserInputs/01-starting-project/src/components/SimpleInput.js",["26","27"],"import { useState, useEffect } from \"react\";\nimport useInput from \"../hooks/use-input\";\n\nconst validateEmail = (email) => {\n  console.log(\"validating\");\n  return String(email)\n    .toLowerCase()\n    .match(\n      /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n    );\n};\n\nconst SimpleInput = (props) => {\n  //Name\n  const {\n    value: enteredName,\n    isValid: enteredNameIsValid,\n    hasError: nameInputHasError,\n    valeuChangeHandler: nameChangeHandler,\n    inputBlurHandler: nameBlurHandler,\n    reset: nameInputReset,\n  } = useInput(value => value.trim() !== '');\n\n  //Email Address\n  const {\n    value: enteredEmail,\n    isValid: enteredEmailIsValid,\n    hasError: emailInputHasError,\n    valeuChangeHandler: emailInputChangeHandler,\n    inputBlurHandler: emailInputBlurHandler,\n    reset: emailInputReset,\n  } = useInput(value => value.trim() !== \"\" && validateEmail(value));\n\n \n  //Full form validation\n  let formIsValid = false;\n  if (enteredNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n\n  const formSubmissionHandler = (event) => {\n    event.preventDefault();\n\n\n    if (!enteredNameIsValid || !enteredEmailIsValid) {\n      return;\n    }\n    console.log('name: '+enteredName +' email: '+ enteredEmail);\n    //name reset\n    nameInputReset();\n\n    //email reset\n    emailInputReset();\n\n  };\n\n  //name class modification\n  const nameInputClasses = nameInputHasError\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n  //email class modification\n  const emailInputClasses = emailInputHasError\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          onChange={nameChangeHandler}\n          onBlur={nameBlurHandler}\n          value={enteredName}\n          // ref={namedInputRef}\n        />\n        {nameInputHasError && (\n          <p className=\"error-text\">Name must not be empty!</p>\n        )}\n      </div>\n      <div className={emailInputClasses}>\n        <label htmlFor=\"email\">Your Email</label>\n        <input\n          type=\"email\"\n          id=\"email\"\n          onChange={emailInputChangeHandler}\n          onBlur={emailInputBlurHandler}\n          value={enteredEmail}\n          // ref={namedInputRef}\n        />\n        {emailInputHasError && (\n          <p className=\"error-text\">The entred email must be valid!</p>\n        )}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n",["28","29"],"/home/jan/Documents/reactjs-course/section-16-Forms&UserInputs/01-starting-project/src/hooks/use-input.js",[],"/home/jan/Documents/reactjs-course/section-16-Forms&UserInputs/01-starting-project/src/components/BasicForm.js",["30"],"import {useState} from 'react';\n\nconst BasicForm = (props) => {\n  const [enteredName, setEnteredName] = useState('');\n  // const [nameIsValid, setNameIsValid] = useState(false);\n  const [nameIsTouched, setNameIsTouched] = useState(false);\n  \n\n  const nameIsValid = enteredName.trim() !== '';\n  const nameHasError = !nameIsValid && nameIsTouched;\n\n  const nameInputClassNames = namehasError ? ''\n\n  return (\n    <form>\n      <div className='control-group'>\n        <div className='form-control'>\n          <label htmlFor='name'>First Name</label>\n          <input type='text' id='name' />\n        </div>\n        <div className='form-control'>\n          <label htmlFor='name'>Last Name</label>\n          <input type='text' id='name' />\n        </div>\n      </div>\n      <div className='form-control'>\n        <label htmlFor='name'>E-Mail Address</label>\n        <input type='text' id='name' />\n      </div>\n      <div className='form-actions'>\n        <button>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default BasicForm;\n",{"ruleId":"31","severity":1,"message":"32","line":2,"column":8,"nodeType":"33","messageId":"34","endLine":2,"endColumn":17},{"ruleId":"31","severity":1,"message":"35","line":1,"column":10,"nodeType":"33","messageId":"34","endLine":1,"endColumn":18},{"ruleId":"31","severity":1,"message":"36","line":1,"column":20,"nodeType":"33","messageId":"34","endLine":1,"endColumn":29},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":null,"fatal":true,"severity":2,"message":"41","line":14,"column":3},"no-unused-vars","'BasicForm' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useEffect' is defined but never used.","no-native-reassign",["42"],"no-negated-in-lhs",["43"],"Parsing error: Unexpected token, expected \":\"\n\n\u001b[0m \u001b[90m 12 |\u001b[39m   \u001b[36mconst\u001b[39m nameInputClassNames \u001b[33m=\u001b[39m namehasError \u001b[33m?\u001b[39m \u001b[32m''\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 13 |\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 14 |\u001b[39m   \u001b[36mreturn\u001b[39m (\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 15 |\u001b[39m     \u001b[33m<\u001b[39m\u001b[33mform\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 16 |\u001b[39m       \u001b[33m<\u001b[39m\u001b[33mdiv\u001b[39m className\u001b[33m=\u001b[39m\u001b[32m'control-group'\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 17 |\u001b[39m         \u001b[33m<\u001b[39m\u001b[33mdiv\u001b[39m className\u001b[33m=\u001b[39m\u001b[32m'form-control'\u001b[39m\u001b[33m>\u001b[39m\u001b[0m","no-global-assign","no-unsafe-negation"]